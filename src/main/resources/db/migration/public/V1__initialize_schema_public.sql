CREATE SCHEMA IF NOT EXISTS public;

CREATE sequence common_seq START WITH 1 increment BY 1;

/* ----- */

CREATE TABLE public.users (
  id BIGINT generated BY DEFAULT AS identity,
  accountNonExpired boolean NOT NULL,
  accountNonLocked boolean NOT NULL,
  credentialsNonExpired boolean NOT NULL,
  email VARCHAR(255),
  enabled boolean NOT NULL,
  firstname VARCHAR(255),
  lastname VARCHAR(255),
  password VARCHAR(255),
  username VARCHAR(255),
  CONSTRAINT users_pk PRIMARY KEY (id)
);

ALTER TABLE public.users ADD CONSTRAINT users_username_uk UNIQUE (username);

ALTER TABLE public.users ADD CONSTRAINT users_email_uk UNIQUE (email);

/* ----- */

CREATE TABLE public.user_roles (
  user_id INTEGER NOT NULL,
  roles VARCHAR(1024),
  CONSTRAINT user_roles_pk PRIMARY KEY (user_id, roles)
);

ALTER TABLE
  IF EXISTS public.user_roles
ADD CONSTRAINT users_user_id_fk
  FOREIGN KEY (user_id)
  REFERENCES public.users;

/* ----- */

INSERT INTO
  public.users(
    accountnonexpired,
    accountnonlocked,
    credentialsnonexpired,
    email,
    enabled,
    firstname,
    lastname,
    password,
    username
  )
VALUES
  (
    true,
    true,
    true,
    'admin@ledger.io',
    true,
    'Admin',
    'Admin',
    '$2a$10$JZnvZFpVvQNx4zctjG4yDeTVzkwm0V2G8aHDw7eLWsfESxnOyhsaO',
    'admin'
  );
  /* Admin1@@ */

INSERT INTO
  public.users(
    accountnonexpired,
    accountnonlocked,
    credentialsnonexpired,
    email,
    enabled,
    firstname,
    lastname,
    password,
    username
  )
VALUES
  (
    true,
    true,
    true,
    'gregory@ledger.io',
    true,
    'Gregory',
    'Gincley',
    '$2a$10$ioWN2wCa8IkVMytfb/D7POd1I9qDkzQuVIaylDujpyKOI6nVQFpUe',
    'gregory'
  );

/* ----- */

INSERT INTO
  public.users(
    accountnonexpired,
    accountnonlocked,
    credentialsnonexpired,
    email,
    enabled,
    firstname,
    lastname,
    password,
    username
  )
VALUES
  (
    true,
    true,
    true,
    'testuser@ledger.io',
    true,
    'Test',
    'User',
    '$2a$10$ke6an7CNjXO.zMPKHrcDNOWuBtJTAaBThyqzfVKawf3k6stM7H0Ie',
    'testuser'
  );

/* ----- */

INSERT INTO
  public.user_roles(user_id, roles)
VALUES
  (1, 'ROLE_ADMIN');

INSERT INTO
  public.user_roles(user_id, roles)
VALUES
  (2, 'ROLE_EDITOR');

INSERT INTO
  public.user_roles(user_id, roles)
VALUES
  (3, 'ROLE_VIEWER');

/* ----- */

CREATE TABLE PUBLIC.SPRING_SESSION (
  PRIMARY_ID CHAR(36) NOT NULL,
  SESSION_ID CHAR(36) NOT NULL,
  CREATION_TIME BIGINT NOT NULL,
  LAST_ACCESS_TIME BIGINT NOT NULL,
  MAX_INACTIVE_INTERVAL INT NOT NULL,
  EXPIRY_TIME BIGINT NOT NULL,
  PRINCIPAL_NAME VARCHAR(100),
  CONSTRAINT SPRING_SESSION_PK PRIMARY KEY (PRIMARY_ID)
);

CREATE UNIQUE INDEX SPRING_SESSION_IX1 ON PUBLIC.SPRING_SESSION (SESSION_ID);

CREATE INDEX SPRING_SESSION_IX2 ON PUBLIC.SPRING_SESSION (EXPIRY_TIME);

CREATE INDEX SPRING_SESSION_IX3 ON PUBLIC.SPRING_SESSION (PRINCIPAL_NAME);

CREATE TABLE SPRING_SESSION_ATTRIBUTES (
  SESSION_PRIMARY_ID CHAR(36) NOT NULL,
  ATTRIBUTE_NAME VARCHAR(200) NOT NULL,
  ATTRIBUTE_BYTES BYTEA NOT NULL,
  CONSTRAINT SPRING_SESSION_ATTRIBUTES_PK PRIMARY KEY (SESSION_PRIMARY_ID, ATTRIBUTE_NAME),
  CONSTRAINT SPRING_SESSION_ATTRIBUTES_FK FOREIGN KEY (SESSION_PRIMARY_ID) REFERENCES PUBLIC.SPRING_SESSION(PRIMARY_ID) ON DELETE CASCADE
);
