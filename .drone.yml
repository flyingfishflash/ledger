# repository secrets:
# - repository_backend  = registry.domain.tld/namespace/ledger
# - repository_frontend = registry.domain.tld/namespace/ledger-frontend
# - repository_backend_development  = registry.domain.tld/namespace/ledger:development
# - repository_frontend_development = registry.domain.tld/namespace/ledger-frontend:development
# - ssh_username
# - ssh_host_dev
# - ssh_host_prd
# - ssh_key

# organization secrets:
# - nyx_git_codeberg_token
# - nyx_git_flyingfishflash_user
# - nyx_git_flyingfishflash_password
# - nyx_git_flyingfishflash_token
# - nyx_git_github_token
# - nyx_git_gitlab_token
# - registry_hostname
# - registry_username
# - registry_password
# - sonar_host
# - sonar_login (user token)

kind: pipeline
type: docker
name: infer version

volumes:
  - name: drone_cache
    host:
      path: /var/lib/docker/volumes_managed/drone_cache

trigger:
  event:
    - push
  ref:
    - refs/heads/build-*
    - refs/heads/ci-*
    - refs/heads/docs-*
    - refs/heads/feature-*
    - refs/heads/fix-*
    - refs/heads/refactor-*
    - refs/heads/style-*
    - refs/heads/test-*
    - refs/heads/main

steps:
  # nyx requires git tags to infer the current version
  - name: fetch git tags
    image: alpine/git
    commands:
      - git fetch --tags

  - name: write .version
    image: registry.flyingfishflash.net/customized-images/container-nyx
    commands:
      - nyx infer --fatal --summary | grep 'current version' | awk '{ print $NF }' > .version
      - cat .version

  - name: write .tags (development)
    image: alpine/git
    commands:
      - cat .version > .tmp
      - echo ",development" >> .tmp
      - tr -d '\n' < .tmp > .tags
      - rm .tmp
      - cat .tags
    when:
      ref:
        exclude:
          - refs/heads/main

  - name: write .tags (release)
    image: alpine/git
    commands:
      - cat .version > .tmp
      - echo ",latest" >> .tmp
      - tr -d '\n' < .tmp > .tags
      - rm .tmp
      - cat .tags
    when:
      ref:
        - refs/heads/main

  - name: cache push
    image: alpine/git
    commands:
      - /drone/src/scripts/ci/drone/drone-cache-push.sh ledger-version-tags
    volumes:
      - name: drone_cache
        path: /drone/drone_cache

---
kind: pipeline
type: docker
name: "frontend - build"

depends_on:
  - infer version

volumes:
  - name: drone_cache
    host:
      path: /var/lib/docker/volumes_managed/drone_cache

trigger:
  event:
    - push

steps:
  - name: cache pull
    image: alpine/git
    commands:
      - /drone/src/scripts/ci/drone/drone-cache-pull.sh ledger-frontend
      - /drone/src/scripts/ci/drone/drone-cache-pull.sh ledger-version-tags
    volumes:
      - name: drone_cache
        path: /drone/drone_cache

  - name: build
    image: node:18-alpine
    depends_on:
      - cache pull
    commands:
      - export PATH=/drone/src/frontend/node_modules/.bin:$PATH
      - cd /drone/src/frontend
      - npm install
      - npm version $(cat /drone/src/.version) --no-git-tag-version
      - ng version
      - ng build --configuration production
      - ls -l

  - name: cache push
    image: alpine/git
    depends_on:
      - build
    commands:
      - /drone/src/scripts/ci/drone/drone-cache-push.sh ledger-frontend
    volumes:
      - name: drone_cache
        path: /drone/drone_cache

---
kind: pipeline
type: docker
name: "backend - build"

depends_on:
  - infer version

trigger:
  event:
    - push

volumes:
  - name: drone_cache
    host:
      path: /var/lib/docker/volumes_managed/drone_cache

services:
  - name: postgres
    image: postgres:latest
    environment:
      POSTGRES_USER: ledger
      POSTGRES_PASSWORD: ledger
      POSTGRES_DB: ledger

steps:
  # nyx requires git tags to infer the current version
  - name: fetch git tags
    image: alpine/git
    commands:
      - git fetch --tags

  - name: cache pull
    image: alpine/git
    depends_on:
      - fetch git tags
    commands:
      - /drone/src/scripts/ci/drone/drone-cache-pull.sh ledger-backend
      - /drone/src/scripts/ci/drone/drone-cache-pull.sh ledger-version-tags
    volumes:
      - name: drone_cache
        path: /drone/drone_cache

  - name: verify postgres
    image: postgres
    commands:
      - |
        until psql "dbname=ledger host=postgres user=ledger password=ledger port=5432" \
          -c "select 1;" >/dev/null 2>&1; do sleep 1; done
      - |
        psql "dbname=ledger host=postgres user=ledger password=ledger port=5432" \
          -c "select count(*) from pg_catalog.pg_tables;"

  - name: build
    image: gradle:8-jdk17
    depends_on:
      - cache pull
      - verify postgres
    commands:
      - >
        gradle :backend:explodebootjar :backend:copyBuildInfo :backend:testClasses :backend:spotlessCheck
      - >
        gradle :backend:test
      - >
        gradle :backend:integrationTests
        -x :backend:bootBuildInfo
      - >
        gradle :backend:integrationTests
        -x backend:bootBuildInfo
        -Dspring.profiles.active=postgresql
        -Dspring.datasource.url=jdbc:postgresql://postgres:5432/ledger
        -Dspring.datasource.username=ledger
        -Dspring.datasource.password=ledger
        -Dspring.datasource.platform=postgresql
      - >
        gradle --stop
    environment:
      NODE_OPTION: --max-old-space-size=4096

  - name: cache push
    image: alpine/git
    depends_on:
      - build
    commands:
      - /drone/src/scripts/ci/drone/drone-cache-push.sh ledger-backend
    volumes:
      - name: drone_cache
        path: /drone/drone_cache

---
kind: pipeline
name: sonar
type: docker

trigger:
  event:
    - push

depends_on:
  - "frontend - build"
  - "backend - build"

volumes:
  - name: drone_cache
    host:
      path: /var/lib/docker/volumes_managed/drone_cache

steps:
  # nyx requires git tags to infer the current version
  - name: fetch git tags
    image: alpine/git
    commands:
      - git fetch --tags

  - name: cache pull
    image: alpine/git
    commands:
      - /drone/src/scripts/ci/drone/drone-cache-pull.sh ledger-backend
    volumes:
      - name: drone_cache
        path: /drone/drone_cache

  - name: sonar analysis
    failure: ignore
    image: gradle:8-jdk17
    depends_on:
      - fetch git tags
      - cache pull
    environment:
      SONAR_HOST:
        from_secret: sonar_host
      SONAR_TOKEN:
        from_secret: sonar_token
    commands:
      - >
        /drone/src/scripts/ci/drone/drone-is-sonar-configured.sh &&
        gradle sonar
        -Dsonar.host.url=$SONAR_HOST
        -Dsonar.token=$SONAR_TOKEN

---
kind: pipeline
name: "frontend - publish"
type: docker

trigger:
  event:
    - push
  ref:
    - refs/heads/build-*
    - refs/heads/ci-*
    - refs/heads/docs-*
    - refs/heads/feature-*
    - refs/heads/fix-*
    - refs/heads/refactor-*
    - refs/heads/style-*
    - refs/heads/test-*
    - refs/heads/main

depends_on:
  - "frontend - build"
  - "backend - build"

volumes:
  - name: drone_cache
    host:
      path: /var/lib/docker/volumes_managed/drone_cache

steps:
  # nyx requires git tags to infer the current version
  - name: fetch git tags
    image: alpine/git
    commands:
      - git fetch --tags

  - name: cache pull
    image: alpine/git
    depends_on:
      - fetch git tags
    commands:
      - /drone/src/scripts/ci/drone/drone-cache-pull.sh ledger-frontend
      - /drone/src/scripts/ci/drone/drone-cache-pull.sh ledger-version-tags
      - pwd
      - ls -la
      - ls /drone/src/frontend/dist/ledger-frontend/ -la
    volumes:
      - name: drone_cache
        path: /drone/drone_cache

  - name: publish
    image: plugins/docker
    depends_on:
      - cache pull
    settings:
      auto_tag: false
      cache_from:
        from_secret: repository_frontend_development
      context: /drone/src/frontend/
      dockerfile: /drone/src/frontend/Dockerfile
      repo:
        from_secret: repository_frontend
      registry:
        from_secret: registry_hostname
      username:
        from_secret: registry_username
      password:
        from_secret: registry_password

---
kind: pipeline
name: "backend - publish"
type: docker

trigger:
  event:
    - push
  ref:
    - refs/heads/build-*
    - refs/heads/ci-*
    - refs/heads/docs-*
    - refs/heads/feature-*
    - refs/heads/fix-*
    - refs/heads/refactor-*
    - refs/heads/style-*
    - refs/heads/test-*
    - refs/heads/main

depends_on:
  - "backend - build"
  - "frontend - build"

volumes:
  - name: drone_cache
    host:
      path: /var/lib/docker/volumes_managed/drone_cache

steps:
  - name: cache pull
    image: alpine/git
    commands:
      - /drone/src/scripts/ci/drone/drone-cache-pull.sh ledger-backend
      - /drone/src/scripts/ci/drone/drone-cache-pull.sh ledger-version-tags
    volumes:
      - name: drone_cache
        path: /drone/drone_cache

  - name: publish
    image: plugins/docker
    settings:
      auto_tag: false
      cache_from:
        from_secret: repository_backend_development
      context: /drone/src/backend/
      dockerfile: /drone/src/backend/Dockerfile
      repo:
        from_secret: repository_backend
      registry:
        from_secret: registry_hostname
      username:
        from_secret: registry_username
      password:
        from_secret: registry_password

---
kind: pipeline
name: release
type: docker

trigger:
  event:
    - push
  ref:
    - refs/heads/main

depends_on:
  - "backend - publish"
  - "frontend - publish"

volumes:
  - name: drone_cache
    host:
      path: /var/lib/docker/volumes_managed/drone_cache

steps:
  # nyx requires git tags to infer the current version
  - name: fetch git tags
    image: alpine/git
    commands:
      - git fetch --tags


  - name: cache pull
    image: alpine/git
    commands:
      - /drone/src/scripts/ci/drone/drone-cache-pull.sh ledger-backend
    volumes:
      - name: drone_cache
        path: /drone/drone_cache

  - name: publish release
    image: registry.flyingfishflash.net/customized-images/container-nyx
    environment:
      NYX_GIT_FLYINGFISHFLASH_USER:
        from_secret: nyx_git_flyingfishflash_user
      NYX_GIT_FLYINGFISHFLASH_PASSWORD:
        from_secret: nyx_git_flyingfishflash_password
      NYX_GIT_FLYINGFISHFLASH_TOKEN:
        from_secret: nyx_git_flyingfishflash_token
      NYX_GIT_CODEBERG_TOKEN:
        from_secret: nyx_git_codeberg_token
      NYX_GIT_GITHUB_TOKEN:
        from_secret: nyx_git_github_token
      NYX_GIT_GITLAB_TOKEN:
        from_secret: nyx_git_gitlab_token
    commands:
      - mkdir /drone/src/build
      - nyx publish --dry-run=false

---
kind: pipeline
name: "deploy - development"
type: docker

trigger:
  event:
    - push
  ref:
    - refs/heads/build-*
    - refs/heads/ci-*
    - refs/heads/docs-*
    - refs/heads/feature-*
    - refs/heads/fix-*
    - refs/heads/refactor-*
    - refs/heads/style-*
    - refs/heads/test-*

depends_on:
  - "frontend - publish"
  - "backend - publish"

clone:
  disable: true

steps:
  - name: deploy
    image: appleboy/drone-ssh
    settings:
      host:
        from_secret: ssh_host_dev
      username:
        from_secret: ssh_username
      key:
        from_secret: ssh_key
      script:
        - ~/.local/bin/scripts/ledger-dev-redeploy.sh

#---
#kind: pipeline
#name: "deploy - production"
#type: docker
#
#trigger:
#  event:
#    - push
#  ref:
#    - refs/tags/*
#
#depends_on:
#  - "frontend - publish"
#  - "backend - publish"
#
#clone:
#  disable: true
#
#steps:
#  - name: deploy
#    image: appleboy/drone-ssh
#    settings:
#      host:
#        from_secret: ssh_host_prd
#      username:
#        from_secret: ssh_username
#      key:
#        from_secret: ssh_key
#      script:
#        - ~/.local/bin/scripts/ledger-prd-redeploy.sh
