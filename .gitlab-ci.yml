
variables:
  DOCKER_DRIVER: overlay2
  VERSION: ""

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

stages:
  - build
  - tests
  - publish

image: docker:latest

cache:
  key: "$CI_COMMIT_REF_NAME"
  paths:
    - build
    - .gradle
    - version

build-jar:
  image: gradle:6.7-jdk14
  stage: build
  script:
    - echo $CI_COMMIT_BRANCH
    - echo
    - gradle explodeBootJar testClasses writeVersion --build-cache

unit-tests:
  image: gradle:6.7-jdk14
  stage: tests
  script:
    - gradle test
      -x bootBuildInfo
      --no-daemon

h2-integration-tests:
  image: gradle:6.7-jdk14
  stage: tests
  script:
    - gradle integrationTests
      -x bootBuildInfo
      --no-daemon

postgres-integration-tests:
  image: gradle:6.7-jdk14
  stage: tests
  services:
    - postgres:latest
  variables:
    POSTGRES_DB: ledger
    POSTGRES_USER: ledger
    POSTGRES_PASSWORD: ledger
  script:
    - gradle integrationTests
      -x bootBuildInfo
      --no-daemon
      -Dspring.profiles.active=postgresql
      -Dspring.datasource.url=jdbc:postgresql://postgres:5432/ledger
      -Dspring.datasource.username=ledger
      -Dspring.datasource.password=ledger
      -Dspring.datasource.platform=postgresql

publish-feature:
  services:
    - docker:dind
  stage: publish
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - echo "-$CI_COMMIT_BRANCH" >> version
    - VERSION=$(cat version)
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$VERSION" -t "$CI_REGISTRY_IMAGE:development" -f Dockerfile.drone .
    - docker push "$CI_REGISTRY_IMAGE:$VERSION"
    - docker push "$CI_REGISTRY_IMAGE:development"
  except:
    - master
    - tags

publish-master-or-version-tagged-ref:
  services:
    - docker:dind
  stage: publish
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - VERSION=$(cat version)
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$VERSION" -t "$CI_REGISTRY_IMAGE:latest" -f Dockerfile.drone .
    - docker push "$CI_REGISTRY_IMAGE:$VERSION"
    - docker push "$CI_REGISTRY_IMAGE:latest"
  only:
    - /^v(\d+\.)?(\d+\.)?(\*|\d+)$/
