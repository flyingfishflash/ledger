variables:
  DOCKER_DRIVER: overlay2
  VERSION: ""

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

stages:
  - build
  - tests
  - code coverage reports
  - publish

image: docker:latest

build-dist:
  image: node:latest
  stage: build
  script:
    - export PATH=$PWD/frontend/node_modules/.bin:$PATH
    - cd frontend
    - npm ci --cache .npm --prefer-offline
    - ng version
    - ng build --configuration production
  cache:
    key: "$CI_COMMIT_REF_SLUG-frontend"
    paths:
      - frontend/.npm/
      - frontend/dist

publish-frontend-feature:
  services:
    - docker:dind
  stage: publish
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    #    - echo "-$CI_COMMIT_BRANCH" >> version
    - cd frontend
    - docker build --pull -t "$CI_REGISTRY_IMAGE:frontend-development" -f Dockerfile .
    - docker push "$CI_REGISTRY_IMAGE:frontend-development"
  except:
    - master
    - tags
  only:
    - /^feature-/
    - /^fix-/
  cache:
    key: "$CI_COMMIT_REF_SLUG-frontend"
    policy: pull
    paths:
      - frontend/node_modules
      - frontend/dist

publish-frontend-version-tagged-ref:
  services:
    - docker:dind
  stage: publish
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - cd frontend
    - docker build --pull -t "$CI_REGISTRY_IMAGE:frontend-latest" -f Dockerfile .
    - docker push "$CI_REGISTRY_IMAGE:frontend-latest"
  only:
    - /^v(\d+\.)?(\d+\.)?(\*|\d+)$/
  cache:
    key: "$CI_COMMIT_REF_SLUG-frontend"
    policy: pull
    paths:
      - frontend/node_modules
      - frontend/dist

build-jar:
  image: gradle:7.4.2-jdk17
  stage: build
  script:
    - echo $CI_COMMIT_BRANCH
    - echo
    - ./scripts/version.sh all
    - echo
    - gradle
      :backend:clean
      :backend:explodebootjar
      :backend:testClasses
      --no-daemon
  cache:
    key: "$CI_COMMIT_REF_SLUG-backend"
    paths:
      - build
      - .gradle
      - backend/build

unit-tests:
  image: gradle:7.4.2-jdk17
  stage: tests
  needs: ["build-jar"]
  script:
    - apt-get update && apt-get -y upgrade && apt-get -y install curl
    - gradle :backend:test
      -x bootBuildInfo
      --no-daemon
    - bash <(curl -s https://codecov.io/bash) -t $CODECOV_TOKEN
  cache:
    key: "$CI_COMMIT_REF_SLUG-backend"
    policy: pull
    paths:
      - build
      - .gradle
      - backend/build

h2-integration-tests:
  image: gradle:7.4.2-jdk17
  stage: tests
  needs: ["build-jar"]
  script:
    - gradle :backend:integrationTests
      -x bootBuildInfo
      --no-daemon
  cache:
    key: "$CI_COMMIT_REF_SLUG-backend"
    policy: pull
    paths:
      - build
      - .gradle
      - backend/build

postgres-integration-tests:
  image: gradle:7.4.2-jdk17
  stage: tests
  needs: ["build-jar"]
  services:
    - postgres:latest
  variables:
    POSTGRES_DB: ledger
    POSTGRES_USER: ledger
    POSTGRES_PASSWORD: ledger
  script:
    - gradle :backend:integrationTests
      -x bootBuildInfo
      --no-daemon
      -Dspring.profiles.active=postgresql
      -Dspring.datasource.url=jdbc:postgresql://postgres:5432/ledger
      -Dspring.datasource.username=ledger
      -Dspring.datasource.password=ledger
      -Dspring.datasource.platform=postgresql
  cache:
    key: "$CI_COMMIT_REF_SLUG-backend"
    policy: pull
    paths:
      - build
      - .gradle
      - backend/build

publish-backend-feature:
  services:
    - docker:dind
  stage: publish
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    #    - echo "-$CI_COMMIT_BRANCH" >> version
    - VERSION=$(./scripts/version.sh version)
    - cd backend
    - echo "$VERSION"
    - docker build -t "$CI_REGISTRY_IMAGE:backend-development" -f Dockerfile .
    - docker push "$CI_REGISTRY_IMAGE:backend-development"
  except:
    - master
    - tags
  only:
    - /^feature-/
    - /^fix-/
  cache:
    key: "$CI_COMMIT_REF_SLUG-backend"
    policy: pull
    paths:
      - build
      - .gradle
      - backend/build

publish-backend-version-tagged-ref:
  services:
    - docker:dind
  stage: publish
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - VERSION=$(./scripts/version.sh version)
    - cd backend
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-backend" -t "$CI_REGISTRY_IMAGE:backend-latest" -f Dockerfile .
    - docker push "$CI_REGISTRY_IMAGE:backend-latest"
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-backend"
  only:
    - /^v(\d+\.)?(\d+\.)?(\*|\d+)$/
  cache:
    key: "$CI_COMMIT_REF_SLUG-backend"
    policy: pull
    paths:
      - build
      - .gradle
      - backend/build
